// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PackingService.API.Data;

#nullable disable

namespace PackingService.API.Migrations
{
    [DbContext(typeof(PackingDataContext))]
    [Migration("20250529235614_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PackingService.API.Models.Caixa", b =>
                {
                    b.Property<int>("CaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaixaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CaixaId");

                    b.ToTable("Caixa", (string)null);

                    b.HasData(
                        new
                        {
                            CaixaId = 1,
                            Nome = "Caixa 01"
                        },
                        new
                        {
                            CaixaId = 2,
                            Nome = "Caixa 02"
                        },
                        new
                        {
                            CaixaId = 3,
                            Nome = "Caixa 03"
                        });
                });

            modelBuilder.Entity("PackingService.API.Models.Caixa", b =>
                {
                    b.OwnsOne("PackingService.API.Models.Dimensoes", "Dimensoes", b1 =>
                        {
                            b1.Property<int>("CaixaId")
                                .HasColumnType("int");

                            b1.Property<double>("Altura")
                                .HasColumnType("float")
                                .HasColumnName("Altura");

                            b1.Property<double>("Comprimento")
                                .HasColumnType("float")
                                .HasColumnName("Comprimento");

                            b1.Property<double>("Largura")
                                .HasColumnType("float")
                                .HasColumnName("Largura");

                            b1.HasKey("CaixaId");

                            b1.ToTable("Caixa");

                            b1.WithOwner()
                                .HasForeignKey("CaixaId");

                            b1.HasData(
                                new
                                {
                                    CaixaId = 1,
                                    Altura = 30.0,
                                    Comprimento = 80.0,
                                    Largura = 40.0
                                },
                                new
                                {
                                    CaixaId = 2,
                                    Altura = 80.0,
                                    Comprimento = 40.0,
                                    Largura = 50.0
                                },
                                new
                                {
                                    CaixaId = 3,
                                    Altura = 50.0,
                                    Comprimento = 60.0,
                                    Largura = 80.0
                                });
                        });

                    b.Navigation("Dimensoes")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
